<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>{} (Curly braces)</name>

<category>Structure</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
# Initialize a new dictionary with the given key/value pairs
element_names = {'H': 'hydrogen', 'He': 'helium', 'Li': 'lithium'}

# Curly braces with nothing inside creates an empty dictionary
nothing_here = {}

# Curly braces with values-only create a new set
element_set = {'H', 'He', 'Li'}
]]></code>
</example>

<description><![CDATA[
Curly braces are used to define "dictionary literals," giving you the ability
to declare a dictionary and its contents inside your program. A dictionary
literal consists of a series of key/value pairs, written with a colon
(<b>:</b>) between them, and with each of the key/value pairs separated from
one other with commas. <br /> 
<br />
Curly braces are also used to define "sets," or a series of unique keys
without values, separated by commas. This is not to be confused with using set() on a pixel.
]]></description>

<syntax>
	dict = {<c>key0: val0, ..., keyN: valN</c>}
	set = {<c>key0, key1, ..., keyN</c>}
</syntax>

<parameter>
<label>key0: val0, ..., keyN: valN</label>
<description><![CDATA[a sequence of key/value pairs]]></description>
</parameter>

<parameter>
<label>key0, key1, ..., keyN</label>
<description><![CDATA[a sequence of unique keys]]></description>
</parameter>

<returns></returns>

<related>indexbrackets</related>
<related>set</related>

<availability>1.0</availability>

<type>Operator</type>

<partof>PDE</partof>


</root>
